{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators, FormControl, FormGroup, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nfunction DynamicFormWithValidationComponent_div_2_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.errorMessages.required, \" \");\n  }\n}\nfunction DynamicFormWithValidationComponent_div_2_div_4_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.errorMessages.invalid, \" \");\n  }\n}\nfunction DynamicFormWithValidationComponent_div_2_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, DynamicFormWithValidationComponent_div_2_div_4_div_1_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(2, DynamicFormWithValidationComponent_div_2_div_4_div_2_Template, 2, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.formGroup.controls[field_r1.name].errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.formGroup.controls[field_r1.name].errors.email || ctx_r2.formGroup.controls[field_r1.name].errors.pattern);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    error: a0\n  };\n};\nfunction DynamicFormWithValidationComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵtemplate(4, DynamicFormWithValidationComponent_div_2_div_4_Template, 3, 2, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", field_r1.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ctx_r0.isTouched(field_r1.name) && !ctx_r0.isValid(field_r1.name)))(\"formControlName\", field_r1.name)(\"type\", field_r1.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isTouched(field_r1.name) && !ctx_r0.isValid(field_r1.name));\n  }\n}\nlet DynamicFormWithValidationComponent = /*#__PURE__*/(() => {\n  class DynamicFormWithValidationComponent {\n    constructor() {\n      this.buttonLabel = \"Submit\";\n      this.errorMessages = {\n        required: \"This is a required field.\",\n        invalid: \"Please provide valid details.\"\n      };\n      this.formSubmit = new EventEmitter();\n    }\n    ngOnInit() {\n      this.formGroup = this.buildFormGroup();\n    }\n    buildFormGroup() {\n      const group = {};\n      let validatorList = [];\n      this.fieldList?.forEach(field => {\n        if (field.validators.required) {\n          validatorList.push(Validators.required);\n        }\n        if (field.validators.email) {\n          validatorList.push(Validators.email);\n        }\n        if (field.validators.pattern) {\n          validatorList.push(Validators.pattern(field.validators.pattern));\n        }\n        group[field.name] = new FormControl(field.value || \"\", validatorList);\n        validatorList = [];\n      });\n      return new FormGroup(group);\n    }\n    isValid(fieldName) {\n      return this.formGroup.controls[fieldName].valid;\n    }\n    isTouched(fieldName) {\n      return this.formGroup.controls[fieldName].touched;\n    }\n    onSubmit() {\n      const updatedFormData = {};\n      this.fieldList.forEach(field => {\n        updatedFormData[field.name] = this.formGroup.controls[field.name].value;\n      });\n      this.formSubmit.emit(updatedFormData);\n    }\n    static #_ = this.ɵfac = function DynamicFormWithValidationComponent_Factory(t) {\n      return new (t || DynamicFormWithValidationComponent)();\n    };\n    static #_2 = this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: DynamicFormWithValidationComponent,\n      selectors: [[\"dynamic-form\"]],\n      inputs: {\n        fieldList: \"fieldList\",\n        buttonLabel: \"buttonLabel\",\n        errorMessages: \"errorMessages\"\n      },\n      outputs: {\n        formSubmit: \"formSubmit\"\n      },\n      decls: 6,\n      vars: 4,\n      consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"field-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn-container\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"field-container\"], [1, \"input-field\", 3, \"ngClass\", \"formControlName\", \"type\"], [\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"], [4, \"ngIf\"]],\n      template: function DynamicFormWithValidationComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function DynamicFormWithValidationComponent_Template_form_ngSubmit_1_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(2, DynamicFormWithValidationComponent_div_2_Template, 5, 8, \"div\", 2);\n          i0.ɵɵelementStart(3, \"div\", 3)(4, \"button\", 4);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.formGroup);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.fieldList);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", !ctx.formGroup.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.buttonLabel, \" \");\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".form-container[_ngcontent-%COMP%]{background:linear-gradient(to right bottom,#fffc,#ffffff4d);border-radius:.5rem;z-index:2;-webkit-backdrop-filter:blur(2rem);backdrop-filter:blur(2rem);display:flex;justify-content:space-between;padding:2rem;width:30rem;box-shadow:6px 6px 20px #7a7a7a36}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{width:100%;padding:0rem 0 2.3rem 1rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:1.2rem;margin-bottom:.2rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .field-container[_ngcontent-%COMP%]{width:100%;margin-bottom:1rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .field-container[_ngcontent-%COMP%]   .input-field[_ngcontent-%COMP%]{display:block;width:97%;border-radius:.5rem;height:3rem;margin:.3rem 0;font-size:1.1rem;padding-left:.5rem;border:1px solid #d7d7d7;outline:none}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .field-container[_ngcontent-%COMP%]   .error[_ngcontent-%COMP%]{border:1px solid #f00}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .field-container[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:red}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]{display:flex;justify-content:flex-end;height:2rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{color:#fff;text-align:center;border:none;border-radius:.5rem;min-width:10rem;height:3rem;font-size:1.2rem;margin-top:1rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background:linear-gradient(to right top,#000000e8,#00000061);outline:none;cursor:pointer}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]   .btn-container[_ngcontent-%COMP%]   button[disabled][_ngcontent-%COMP%]{background:#b4b4b4;cursor:not-allowed}@media screen and (max-width: \\\"625px\\\"),(max-width: \\\"425px\\\"){.form-container[_ngcontent-%COMP%]{flex-direction:column;justify-content:center;align-items:center;width:15rem}.form-container[_ngcontent-%COMP%]   h1[_ngcontent-%COMP%]{margin:0 0 2rem}.form-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%], .form-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}}\"]\n    });\n  }\n  return DynamicFormWithValidationComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DynamicFormWithValidationModule = /*#__PURE__*/(() => {\n  class DynamicFormWithValidationModule {\n    static #_ = this.ɵfac = function DynamicFormWithValidationModule_Factory(t) {\n      return new (t || DynamicFormWithValidationModule)();\n    };\n    static #_2 = this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: DynamicFormWithValidationModule\n    });\n    static #_3 = this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [BrowserModule, ReactiveFormsModule]\n    });\n  }\n  return DynamicFormWithValidationModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DynamicFormWithValidationComponent, DynamicFormWithValidationModule };\n//# sourceMappingURL=dynamic-form-with-validation.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}